package com.example.gcmtest2;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONObject;

import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.support.v4.content.WakefulBroadcastReceiver;
import android.widget.Toast;

public class GcmBroadcastReceiver extends WakefulBroadcastReceiver {
	private static final String Alert ="http://172.19.24.191/locationservice/LocationService.svc/Alert";
	//private static final String Fence ="http://172.19.24.191/locationservice/LocationService.svc/GetFence";
	private static String result="";
	public static String message="DEFAULT STRING";
	
	
	//GCMINTENTSERVICE MIGHT NEED TO DELETE FROM DEFAULT PACKAGE
	@Override
	public void onReceive(Context context, Intent intent) {
		// TODO Auto-generated method stub
		ComponentName comp = new ComponentName(context.getPackageName(),GcmIntentService.class.getName());
		startWakefulService(context,(intent.setComponent(comp)));
		setResultCode(Activity.RESULT_OK);
		
		Toast.makeText(context, "WOW!!! RECEIVED NEW NOTIFCATION", Toast.LENGTH_LONG).show();			
		
		POST(context);
		
		//Start the medication activity 
		Intent i = new Intent();
		i.setClassName("com.example.gcmtest2", "com.example.gcmtest2.Alert");
		i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
		context.startActivity(i);	
		
	}
	
	public static void setMessage(String msg)
	{
		
		message =msg;
	}
	
	public static String getMessage()
	{
		return message;
	}
	
	public static void clearMessage(){
		GcmBroadcastReceiver.message = "DEFAULT STRING";
	}
	
	public static void POST(Context context)
	{
		new AsyncTask<Void, Void, String>()
		{
			@Override
			protected String doInBackground(Void... params) {
				
				
				
				DefaultHttpClient hc1 = new DefaultHttpClient();
				
							
				HttpPost httpPost1 = new HttpPost(Alert);
				
				try
				{
					
					
					HttpResponse response = (HttpResponse)hc1.execute(httpPost1);
				
					HttpEntity entity1 = response.getEntity();
					
					if(entity1!=null)
					{
						InputStream instream1 = entity1.getContent();
						result = convertInputStreamToString(instream1);
						instream1.close();
						setMessage(result);
					}
					
				}catch(Exception e){
					e.printStackTrace();
				}
				
				return null;
			
			}
		}.execute(null,null,null);
		
		
	}
	
	
	private static String convertInputStreamToString(InputStream inputStream) throws IOException{
        BufferedReader bufferedReader = new BufferedReader( new InputStreamReader(inputStream));
        String line = "";
        String result = "";
        while((line = bufferedReader.readLine()) != null)
            result += line;
 
        inputStream.close();
        return result;
 
    }   

}
