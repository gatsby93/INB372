package com.example.smartwatch;

import android.content.Context;
import android.content.Intent;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.util.Log;
import android.view.View;
import android.widget.Button;

import com.google.android.gms.maps.CameraUpdate;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.Marker;
import com.google.android.gms.maps.model.MarkerOptions;
public class PantientApp extends FragmentActivity implements LocationListener
{

    
	static final LatLng NKUT = new LatLng(-27.477112,153.028015);
	private GoogleMap map;
	
	private static final String TAG = "MyActivity";

    private double lat, lng;
    private Button btn1;
	
    //@TargetApi(Build.VERSION_CODES.HONEYCOMB) @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_watch);
        
       //MAP
       CreateMap();
        
       //GPS
       SetGPS();

       
				
        btn1 = (Button) findViewById(R.id.postbtn);
        btn1.setOnClickListener(new View.OnClickListener(){

			@Override
			public void onClick(View v) {
				// TODO 自动生成的方法存根
				// call AsynTask to perform network operation on separate thread
				//lat2 = lat;
				//lng2 = lng;
				//Marker ml = map.addMarker(new MarkerOptions().position(new LatLng(lat2,
           			 //lng2)).title("My location").snippet("current"));
				Intent intent = new Intent(PantientApp.this, ConfirmLoc.class);
				startActivity(intent);
			}
		});
    }

    public void CreateMap(){ 
    	SupportMapFragment mf = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);
        map = mf.getMap();
        //TextView text=(EditText)findViewById(R.id.text_View); 
        //Button but=(Button)findViewById(R.id.button1);
        
        Marker nkut = map.addMarker(new MarkerOptions().position(NKUT).title("QUT").snippet("GP"));

        // Move the camera instantly to NKUT with a zoom of 16.
        map.moveCamera(CameraUpdateFactory.newLatLngZoom(NKUT, 16));
        
        map.setMyLocationEnabled(true);
        map.setMapType(GoogleMap.MAP_TYPE_NORMAL);
    }
    public void SetGPS(){
    	 LocationManager locMan = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
         Location loc = locMan.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
         if (loc != null) {
             lat = loc.getLatitude();
             Log.d(TAG, "latitude: " + lat);
             lng = loc.getLongitude();
             Log.d(TAG, "longitude: " + lng);
         }

         LocationListener locLis = new MyLocationListener();
         locMan.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000, 10,
                         locLis);
    }
  
	public class MyLocationListener implements LocationListener {
        @Override
        
        public void onLocationChanged(Location loc) {
        	 if (loc != null) {
             	CameraUpdate center=
             			 CameraUpdateFactory.newLatLng(new LatLng(lat,
             			 lng));
             			CameraUpdate zoom=CameraUpdateFactory.zoomTo(18);
             			 
             			map.moveCamera(center);
             			map.animateCamera(zoom);
             			
             	        System.out.println(lat);
             	        System.out.println(lng);
        	 }
        }
     
        @Override
        public void onProviderDisabled(String provider) {
        }
     
        @Override
        public void onProviderEnabled(String provider) {
        }
     
        @Override
        public void onStatusChanged(String provider, int status, Bundle extras) {
        }
    }
	@Override
	public void onLocationChanged(Location location) {
		// TODO 自动生成的方法存根
		
	}

	@Override
	public void onStatusChanged(String provider, int status, Bundle extras) {
		// TODO 自动生成的方法存根
		
	}

	@Override
	public void onProviderEnabled(String provider) {
		// TODO 自动生成的方法存根
		
	}

	@Override
	public void onProviderDisabled(String provider) {
		// TODO 自动生成的方法存根
		
	}
}
